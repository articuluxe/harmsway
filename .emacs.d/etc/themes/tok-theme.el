;;; tok-theme.el --- Minimal monochromatic theme for Emacs in the spirit of Zmacs and Smalltalk-80. -*- lexical-binding: t; -*-

;; Author: Topi Kettunen <topi@topikettunen.com>
;; URL: https://github.com/topikettunen/tok-theme
;; Version: 0.1
;; Package-Requires: ((emacs "27.0"))

;; This is free and unencumbered software released into the public domain.
;;
;; Anyone is free to copy, modify, publish, use, compile, sell, or
;; distribute this software, either in source code form or as a compiled
;; binary, for any purpose, commercial or non-commercial, and by any
;; means.
;;
;; In jurisdictions that recognize copyright laws, the author or authors
;; of this software dedicate any and all copyright interest in the
;; software to the public domain. We make this dedication for the benefit
;; of the public at large and to the detriment of our heirs and
;; successors. We intend this dedication to be an overt act of
;; relinquishment in perpetuity of all present and future rights to this
;; software under copyright law.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
;; IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
;; OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
;; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
;; OTHER DEALINGS IN THE SOFTWARE.
;;
;; For more information, please refer to <https://unlicense.org>

;; This file is not part of Emacs.

;;; Commentary:

;; Tok is a minimal monochromatic theme for Emacs in the spirit
;; of Zmacs and Smalltalk-80.

;;; Code:

(defgroup tok-theme nil
  "Options for tok-theme."
  :group 'faces)

(deftheme tok
  "Minimal monochromatic theme for Emacs in the spirit of Zmacs and
Smalltalk-80"
  :kind 'color-scheme)

(custom-theme-set-faces
 'tok
 `(Info-quoted ((t (:inherit fixed-pitch-serif))))
 `(abbrev-table-name ((t (:inherit font-lock-function-name-face))))
 `(ansi-color-black ((t (:foreground "black" :background "black"))))
 `(ansi-color-blue ((t (:foreground "blue2" :background "blue2"))))
 `(ansi-color-bold ((t (:inherit bold))))
 `(ansi-color-bright-black ((t (:foreground "grey30" :background "grey30"))))
 `(ansi-color-bright-blue ((t (:foreground "blue1" :background "blue1"))))
 `(ansi-color-bright-cyan ((t (:foreground "cyan2" :background "cyan2"))))
 `(ansi-color-bright-green ((t (:foreground "green2" :background "green2"))))
 `(ansi-color-bright-magenta ((t (:foreground "magenta2" :background "magenta2"))))
 `(ansi-color-bright-red ((t (:foreground "red2" :background "red2"))))
 `(ansi-color-bright-white ((t (:foreground "white" :background "white"))))
 `(ansi-color-bright-yellow ((t (:foreground "yellow2" :background "yellow2"))))
 `(ansi-color-cyan ((t (:foreground "cyan3" :background "cyan3"))))
 `(ansi-color-faint ((t (:weight light))))
 `(ansi-color-fast-blink ((t (:box (:line-width -1)))))
 `(ansi-color-green ((t (:foreground "green3" :background "green3"))))
 `(ansi-color-inverse ((t (:inverse-video t))))
 `(ansi-color-italic ((t (:inherit italic))))
 `(ansi-color-magenta ((t (:foreground "magenta3" :background "magenta3"))))
 `(ansi-color-red ((t (:foreground "red3" :background "red3"))))
 `(ansi-color-slow-blink ((t (:box (:line-width -1)))))
 `(ansi-color-underline ((t (:inherit underline))))
 `(ansi-color-white ((t (:foreground "grey90" :background "grey90"))))
 `(ansi-color-yellow ((t (:foreground "yellow3" :background "yellow3"))))
 `(blink-matching-paren-offscreen ((t (:foreground "green"))))
 `(bold ((t (:weight bold))))
 `(bold-italic ((t (:weight bold :slant italic))))
 `(bookmark-face ((t (:foreground "DarkOrange1"))))
 `(bookmark-menu-bookmark ((t (:weight bold))))
 `(border ((t nil)))
 `(browse-url-button ((t (:inherit link))))
 `(buffer-menu-buffer ((t (:weight bold))))
 `(button ((t (:box 1))))
 `(c-annotation-face ((t (:inherit font-lock-constant-face))))
 `(c-nonbreakable-space-face ((t (:foreground "white" :background "black"))))
 `(calendar-month-header ((t (:inherit font-lock-function-name-face))))
 `(calendar-today ((t (:underline t))))
 `(calendar-weekday-header ((t (:inherit font-lock-constant-face))))
 `(calendar-weekend-header ((t (:inherit font-lock-comment-face))))
 `(change-log-acknowledgment ((t (:inherit font-lock-comment-face))))
 `(change-log-conditionals ((t (:inherit font-lock-variable-name-face))))
 `(change-log-date ((t (:inherit font-lock-string-face))))
 `(change-log-email ((t (:inherit font-lock-variable-name-face))))
 `(change-log-file ((t (:inherit font-lock-function-name-face))))
 `(change-log-function ((t (:inherit font-lock-variable-name-face))))
 `(change-log-list ((t (:inherit font-lock-keyword-face))))
 `(change-log-name ((t (:inherit font-lock-constant-face))))
 `(child-frame-border ((t nil)))
 `(comint-highlight-input ((t (:weight bold))))
 `(comint-highlight-prompt ((t (:inherit minibuffer-prompt))))
 `(compilation-column-number ((t (:inherit font-lock-doc-face))))
 `(compilation-error ((t (:inherit error))))
 `(compilation-info ((t (:inherit success))))
 `(compilation-line-number ((t (:inherit font-lock-keyword-face))))
 `(compilation-mode-line-exit ((t (:weight bold :foreground "ForestGreen" :inherit compilation-info))))
 `(compilation-mode-line-fail ((t (:weight bold :foreground "Red1" :inherit compilation-error))))
 `(compilation-mode-line-run ((t (:inherit compilation-warning))))
 `(compilation-warning ((t (:inherit warning))))
 `(completions-annotations ((t (:inherit (italic shadow)))))
 `(completions-common-part ((t (:weight bold))))
 `(completions-first-difference ((t nil)))
 `(completions-group-separator ((t (:strike-through t :inherit shadow))))
 `(completions-group-title ((t (:slant italic :inherit shadow))))
 `(completions-highlight ((t (:inherit highlight))))
 `(confusingly-reordered ((t (:underline (:style wave :color "Red1")))))
 `(corfu--bar ((t (:foreground "black"))))
 `(corfu--cbar ((t (:inherit (corfu--bar corfu-current)))))
 `(corfu-annotations ((t (:inherit completions-annotations))))
 `(corfu-bar ((t (:background "black"))))
 `(corfu-border ((t (:background "black"))))
 `(corfu-current ((t (:extend t :foreground "grey50"))))
 `(corfu-default ((t (:background "white"))))
 `(corfu-deprecated ((t (:strike-through t :inherit shadow))))
 `(cursor ((t (:background "black"))))
 `(default ((t (:foreground "black" :background "white"))))
 `(diary ((t (:foreground "red1"))))
 `(diary-anniversary ((t (:inherit font-lock-keyword-face))))
 `(diary-button ((t nil)))
 `(diary-time ((t (:inherit font-lock-variable-name-face))))
 `(diff-added ((t (:extend t :background "#eeffee" :inherit diff-changed))))
 `(diff-changed ((t nil)))
 `(diff-changed-unspecified ((t (:extend t :background "grey90" :inherit diff-changed))))
 `(diff-context ((t (:extend t))))
 `(diff-error ((t (:weight bold :foreground "red" :background "black"))))
 `(diff-file-header ((t (:weight bold :extend t :background "grey75"))))
 `(diff-function ((t (:inherit diff-header))))
 `(diff-header ((t (:extend t :background "grey85"))))
 `(diff-hunk-header ((t (:inherit diff-header))))
 `(diff-index ((t (:inherit diff-file-header))))
 `(diff-indicator-added ((t (:foreground "#22aa22" :inherit diff-added))))
 `(diff-indicator-changed ((t (:foreground "#aaaa22" :inherit diff-changed))))
 `(diff-indicator-removed ((t (:foreground "#aa2222" :inherit diff-removed))))
 `(diff-nonexistent ((t (:inherit diff-file-header))))
 `(diff-refine-added ((t (:background "#bbffbb" :inherit diff-refine-changed))))
 `(diff-refine-changed ((t (:background "#ffff55"))))
 `(diff-refine-removed ((t (:background "#ffcccc" :inherit diff-refine-changed))))
 `(diff-removed ((t (:extend t :background "#ffeeee" :inherit diff-changed))))
 `(dired-broken-symlink ((t (:inherit error))))
 `(dired-directory ((t (:weight bold))))
 `(dired-flagged ((t (:inherit error))))
 `(dired-header ((t (:inherit font-lock-type-face))))
 `(dired-ignored ((t (:inherit shadow))))
 `(dired-mark ((t (:inherit font-lock-constant-face))))
 `(dired-marked ((t (:inherit warning))))
 `(dired-perm-write ((t (:inherit font-lock-comment-delimiter-face))))
 `(dired-set-id ((t (:inherit font-lock-warning-face))))
 `(dired-special ((t (:inherit font-lock-variable-name-face))))
 `(dired-symlink ((t (:inherit font-lock-keyword-face))))
 `(dired-warning ((t (:inherit font-lock-warning-face))))
 `(doc-view-svg-face ((t (:foreground "black" :background "white" :inherit default))))
 `(edmacro-label ((t (:foreground "DarkBlue" :inherit bold))))
 `(eglot-diagnostic-tag-deprecated-face ((t (:strike-through t :inherit shadow))))
 `(eglot-diagnostic-tag-unnecessary-face ((t (:inherit shadow))))
 `(eglot-highlight-symbol-face ((t (:inherit bold))))
 `(eglot-inlay-hint-face ((t (:height 0.8 :inherit shadow))))
 `(eglot-mode-line ((t (:weight bold :inherit font-lock-constant-face))))
 `(eglot-parameter-hint-face ((t (:inherit eglot-inlay-hint-face))))
 `(eglot-type-hint-face ((t (:inherit eglot-inlay-hint-face))))
 `(eldoc-highlight-function-argument ((t (:inherit bold))))
 `(elisp-shorthand-font-lock-face ((t (:foreground "cyan" :inherit font-lock-keyword-face))))
 `(epa-field-body ((t (:slant italic))))
 `(epa-field-name ((t (:weight bold))))
 `(epa-mark ((t (:weight bold :foreground "red"))))
 `(epa-string ((t (:foreground "blue4"))))
 `(epa-validity-disabled ((t (:slant italic :inverse-video t))))
 `(epa-validity-high ((t (:weight bold))))
 `(epa-validity-low ((t (:slant italic))))
 `(epa-validity-medium ((t (:slant italic))))
 `(error ((t (:weight bold :foreground "red"))))
 `(ert-test-result-expected ((t (:background "green1"))))
 `(ert-test-result-unexpected ((t (:background "red1"))))
 `(escape-glyph ((t (:foreground "brown"))))
 `(eww-form-checkbox ((t (:box (:line-width 2 :style released-button) :foreground "black" :background "lightgrey"))))
 `(eww-form-file ((t (:box (:line-width 2 :style released-button) :foreground "black" :background "#808080"))))
 `(eww-form-select ((t (:box (:line-width 2 :style released-button) :foreground "black" :background "lightgrey"))))
 `(eww-form-submit ((t (:box (:line-width 2 :style released-button) :foreground "black" :background "#808080"))))
 `(eww-form-text ((t (:box (:line-width 1) :foreground "white" :background "#505050"))))
 `(eww-form-textarea ((t (:box (:line-width 1) :foreground "black" :background "#C0C0C0"))))
 `(eww-invalid-certificate ((t (:weight bold :foreground "red"))))
 `(eww-valid-certificate ((t (:weight bold :foreground "ForestGreen"))))
 `(ffap ((t (:inherit highlight))))
 `(file-name-shadow ((t (:inherit shadow))))
 `(fill-column-indicator ((t (:inherit shadow))))
 `(flymake-end-of-line-diagnostics-face ((t (:height 0.85 :box (:line-width -1)))))
 `(flymake-eol-information-face ((t (:slant italic :box nil :inherit (flymake-end-of-line-diagnostics-face)))))
 `(flymake-error ((t (:underline (:style wave :color "Red1")))))
 `(flymake-error-echo ((t (:inherit compilation-error))))
 `(flymake-error-echo-at-eol ((t (:inherit (flymake-end-of-line-diagnostics-face compilation-error)))))
 `(flymake-note ((t (:underline (:style wave :color "yellow green")))))
 `(flymake-note-echo ((t (:inherit compilation-info))))
 `(flymake-note-echo-at-eol ((t (:inherit (flymake-end-of-line-diagnostics-face compilation-info)))))
 `(flymake-warning ((t (:underline nil))))
 `(flymake-warning-echo ((t (:inherit compilation-warning))))
 `(flymake-warning-echo-at-eol ((t (:inherit (flymake-end-of-line-diagnostics-face compilation-warning)))))
 `(flyspell-duplicate ((t (:underline (:style wave :color "DarkOrange")))))
 `(flyspell-incorrect ((t (:underline (:style wave :color "Red1")))))
 `(font-lock-bracket-face ((t (:inherit font-lock-punctuation-face))))
 `(font-lock-builtin-face ((t nil)))
 `(font-lock-comment-delimiter-face ((t (:inherit font-lock-comment-face))))
 `(font-lock-comment-face ((t nil)))
 `(font-lock-constant-face ((t nil)))
 `(font-lock-delimiter-face ((t (:inherit font-lock-punctuation-face))))
 `(font-lock-doc-face ((t (:inherit font-lock-comment-face))))
 `(font-lock-doc-markup-face ((t nil)))
 `(font-lock-escape-face ((t (:inherit font-lock-regexp-grouping-backslash))))
 `(font-lock-function-call-face ((t (:inherit font-lock-function-name-face))))
 `(font-lock-function-name-face ((t nil)))
 `(font-lock-keyword-face ((t nil)))
 `(font-lock-misc-punctuation-face ((t (:inherit font-lock-punctuation-face))))
 `(font-lock-negation-char-face ((t nil)))
 `(font-lock-number-face ((t nil)))
 `(font-lock-operator-face ((t nil)))
 `(font-lock-preprocessor-face ((t (:foreground "grey50"))))
 `(font-lock-property-name-face ((t (:inherit font-lock-variable-name-face))))
 `(font-lock-property-use-face ((t (:inherit font-lock-property-name-face))))
 `(font-lock-punctuation-face ((t nil)))
 `(font-lock-regexp-face ((t (:inherit font-lock-string-face))))
 `(font-lock-regexp-grouping-backslash ((t nil)))
 `(font-lock-regexp-grouping-construct ((t nil)))
 `(font-lock-string-face ((t nil)))
 `(font-lock-type-face ((t nil)))
 `(font-lock-variable-name-face ((t nil)))
 `(font-lock-variable-use-face ((t (:inherit font-lock-variable-name-face))))
 `(font-lock-warning-face ((t (:underline (:style wave)))))
 `(fringe ((t (:background "grey95"))))
 `(git-commit-comment-action ((t (:inherit bold))))
 `(git-commit-comment-branch-local ((t (:inherit magit-branch-local))))
 `(git-commit-comment-branch-remote ((t (:inherit magit-branch-remote))))
 `(git-commit-comment-detached ((t (:inherit git-commit-comment-branch-local))))
 `(git-commit-comment-file ((t (:inherit git-commit-trailer-value))))
 `(git-commit-comment-heading ((t (:inherit git-commit-trailer-token))))
 `(git-commit-keyword ((t (:inherit font-lock-string-face))))
 `(git-commit-nonempty-second-line ((t (:inherit font-lock-warning-face))))
 `(git-commit-overlong-summary ((t (:inherit font-lock-warning-face))))
 `(git-commit-summary ((t (:inherit font-lock-type-face))))
 `(git-commit-trailer-token ((t (:inherit font-lock-keyword-face))))
 `(git-commit-trailer-value ((t (:inherit font-lock-string-face))))
 `(glyphless-char ((t (:height 0.6))))
 `(gnus-button ((t (:weight bold))))
 `(gnus-emphasis-bold ((t (:weight bold))))
 `(gnus-emphasis-bold-italic ((t (:weight bold :slant italic))))
 `(gnus-emphasis-highlight-words ((t (:foreground "yellow" :background "black"))))
 `(gnus-emphasis-italic ((t (:slant italic))))
 `(gnus-emphasis-strikethru ((t (:strike-through t))))
 `(gnus-emphasis-underline ((t (:underline t))))
 `(gnus-emphasis-underline-bold ((t (:weight bold :underline t))))
 `(gnus-emphasis-underline-bold-italic ((t (:weight bold :slant italic :underline t))))
 `(gnus-emphasis-underline-italic ((t (:slant italic :underline t))))
 `(gnus-group-mail-1 ((t (:weight bold :inherit gnus-group-mail-1-empty))))
 `(gnus-group-mail-1-empty ((t (:foreground "DeepPink3"))))
 `(gnus-group-mail-2 ((t (:weight bold :inherit gnus-group-mail-2-empty))))
 `(gnus-group-mail-2-empty ((t (:foreground "HotPink3"))))
 `(gnus-group-mail-3 ((t (:weight bold :inherit gnus-group-mail-3-empty))))
 `(gnus-group-mail-3-empty ((t (:foreground "magenta4"))))
 `(gnus-group-mail-low ((t (:weight bold :inherit gnus-group-mail-low-empty))))
 `(gnus-group-mail-low-empty ((t (:foreground "DeepPink4"))))
 `(gnus-group-news-1 ((t (:weight bold :inherit gnus-group-news-1-empty))))
 `(gnus-group-news-1-empty ((t (:foreground "ForestGreen"))))
 `(gnus-group-news-2 ((t (:weight bold :inherit gnus-group-news-2-empty))))
 `(gnus-group-news-2-empty ((t (:foreground "CadetBlue4"))))
 `(gnus-group-news-3 ((t (:weight bold :inherit gnus-group-news-3-empty))))
 `(gnus-group-news-3-empty ((t nil)))
 `(gnus-group-news-4 ((t (:weight bold :inherit gnus-group-news-4-empty))))
 `(gnus-group-news-4-empty ((t nil)))
 `(gnus-group-news-5 ((t (:weight bold :inherit gnus-group-news-5-empty))))
 `(gnus-group-news-5-empty ((t nil)))
 `(gnus-group-news-6 ((t (:weight bold :inherit gnus-group-news-6-empty))))
 `(gnus-group-news-6-empty ((t nil)))
 `(gnus-group-news-low ((t (:weight bold :inherit gnus-group-news-low-empty))))
 `(gnus-group-news-low-empty ((t (:foreground "DarkGreen"))))
 `(gnus-header ((t (:inherit variable-pitch-text))))
 `(gnus-header-content ((t (:slant italic :foreground "indianred4" :inherit gnus-header))))
 `(gnus-header-from ((t (:foreground "red3" :inherit gnus-header))))
 `(gnus-header-name ((t (:foreground "maroon" :inherit gnus-header))))
 `(gnus-header-newsgroups ((t (:slant italic :foreground "MidnightBlue"))))
 `(gnus-header-subject ((t (:foreground "red4" :inherit gnus-header))))
 `(gnus-signature ((t (:slant italic))))
 `(gnus-splash ((t (:foreground "#888888"))))
 `(gnus-summary-cancelled ((t (:extend t :foreground "yellow" :background "black"))))
 `(gnus-summary-high-ancient ((t (:weight bold :inherit gnus-summary-normal-ancient))))
 `(gnus-summary-high-read ((t (:weight bold :inherit gnus-summary-normal-read))))
 `(gnus-summary-high-ticked ((t (:weight bold :inherit gnus-summary-normal-ticked))))
 `(gnus-summary-high-undownloaded ((t (:weight bold :inherit gnus-summary-normal-undownloaded))))
 `(gnus-summary-high-unread ((t (:weight bold :inherit gnus-summary-normal-unread))))
 `(gnus-summary-low-ancient ((t (:slant italic :inherit gnus-summary-normal-ancient))))
 `(gnus-summary-low-read ((t (:slant italic :inherit gnus-summary-normal-read))))
 `(gnus-summary-low-ticked ((t (:slant italic :inherit gnus-summary-normal-ticked))))
 `(gnus-summary-low-undownloaded ((t (:slant italic :inherit gnus-summary-normal-undownloaded))))
 `(gnus-summary-low-unread ((t (:slant italic :inherit gnus-summary-normal-unread))))
 `(gnus-summary-normal-ancient ((t (:extend t :foreground "RoyalBlue"))))
 `(gnus-summary-normal-read ((t (:extend t :foreground "DarkGreen"))))
 `(gnus-summary-normal-ticked ((t (:extend t :foreground "firebrick"))))
 `(gnus-summary-normal-undownloaded ((t (:weight normal :extend t :foreground "cyan4"))))
 `(gnus-summary-normal-unread ((t (:extend t))))
 `(gnus-summary-selected ((t (:underline t :extend t))))
 `(go-coverage-0 ((t (:foreground "#c00000"))))
 `(go-coverage-1 ((t (:foreground "#808080"))))
 `(go-coverage-10 ((t (:foreground "#14ec9b"))))
 `(go-coverage-2 ((t (:foreground "#748c83"))))
 `(go-coverage-3 ((t (:foreground "#689886"))))
 `(go-coverage-4 ((t (:foreground "#5ca489"))))
 `(go-coverage-5 ((t (:foreground "#50b08c"))))
 `(go-coverage-6 ((t (:foreground "#44bc8f"))))
 `(go-coverage-7 ((t (:foreground "#38c892"))))
 `(go-coverage-8 ((t (:foreground "#2cd495"))))
 `(go-coverage-9 ((t (:foreground "#20e098"))))
 `(go-coverage-covered ((t (:foreground "#2cd495"))))
 `(go-coverage-untracked ((t (:foreground "#505050"))))
 `(go-dot-mod-module-name ((t (:inherit default))))
 `(go-dot-mod-module-semver ((t (:inherit go-dot-mod-module-version))))
 `(go-dot-mod-module-version ((t (:inherit default))))
 `(grep-heading ((t (:inherit compilation-info))))
 `(header-line ((t (:box nil :foreground "grey20" :background "grey90" :inherit mode-line))))
 `(header-line-highlight ((t (:inherit mode-line-highlight))))
 `(help-argument-name ((t (:inherit italic))))
 `(help-for-help-header ((t (:height 1.26))))
 `(help-key-binding ((t (:box (:line-width (-1 . -1) :color "grey80") :foreground "DarkBlue" :background "grey96" :inherit fixed-pitch))))
 `(highlight ((t (:background "grey90"))))
 `(hl-line ((t (:extend t :inherit highlight))))
 `(holiday ((t (:background "pink"))))
 `(homoglyph ((t (:foreground "brown"))))
 `(ibuffer-locked-buffer ((t (:foreground "brown4"))))
 `(icon ((t (:underline nil))))
 `(icon-button ((t (:box (:line-width (3 . -1) :color "#404040" :style flat-button) :foreground "black" :background "#808080" :inherit icon))))
 `(ido-first-match ((t (:weight bold))))
 `(ido-incomplete-regexp ((t (:inherit font-lock-warning-face))))
 `(ido-indicator ((t (:width condensed :foreground "yellow1" :background "red1"))))
 `(ido-only-match ((t (:foreground "ForestGreen"))))
 `(ido-subdir ((t (:foreground "red1"))))
 `(ido-virtual ((t (:inherit font-lock-builtin-face))))
 `(info-header-node ((t (:inherit info-node))))
 `(info-header-xref ((t (:inherit info-xref))))
 `(info-index-match ((t (:inherit match))))
 `(info-menu-header ((t (:weight bold :inherit variable-pitch))))
 `(info-menu-star ((t (:foreground "red1"))))
 `(info-node ((t (:weight bold :slant italic :foreground "brown"))))
 `(info-title-1 ((t (:height 1.2 :inherit info-title-2))))
 `(info-title-2 ((t (:height 1.2 :inherit info-title-3))))
 `(info-title-3 ((t (:height 1.2 :inherit info-title-4))))
 `(info-title-4 ((t (:weight bold :inherit variable-pitch))))
 `(info-xref ((t (:inherit link))))
 `(info-xref-visited ((t (:inherit (link-visited info-xref)))))
 `(internal-border ((t nil)))
 `(isearch ((t (:foreground "lightskyblue1" :background "magenta3"))))
 `(isearch-fail ((t (:background "RosyBrown1"))))
 `(isearch-group-1 ((t (:foreground "lightskyblue1" :background "#f000f0"))))
 `(isearch-group-2 ((t (:foreground "lightskyblue1" :background "#a000a0"))))
 `(italic ((t (:slant italic))))
 `(kmacro-menu-flagged ((t (:inherit error))))
 `(kmacro-menu-mark ((t (:inherit font-lock-constant-face))))
 `(kmacro-menu-marked ((t (:inherit warning))))
 `(lazy-highlight ((t (:background "paleturquoise"))))
 `(line-number ((t (:foreground "grey80"))))
 `(line-number-current-line ((t (:foreground "black" :background "grey90"))))
 `(line-number-major-tick ((t (:weight bold :background "grey85"))))
 `(line-number-minor-tick ((t (:weight bold :background "grey95"))))
 `(link ((t (:underline t))))
 `(link-visited ((t (:foreground "magenta4" :inherit link))))
 `(llama-##-macro ((t (:inherit font-lock-function-call-face))))
 `(llama-deleted-argument ((t (:box (:line-width (-1 . -1) :color "red" :style nil)))))
 `(llama-llama-macro ((t (:inherit font-lock-keyword-face))))
 `(llama-mandatory-argument ((t (:inherit font-lock-variable-use-face))))
 `(llama-optional-argument ((t (:inherit font-lock-type-face))))
 `(log-edit-header ((t (:inherit font-lock-keyword-face))))
 `(log-edit-headers-separator ((t (:height 0.1 :extend t :inverse-video t))))
 `(log-edit-summary ((t (:inherit font-lock-function-name-face))))
 `(log-edit-unknown-header ((t (:inherit font-lock-comment-face))))
 `(log-view-commit-body ((t (:inherit font-lock-comment-face))))
 `(log-view-file ((t (:weight bold :extend t :background "grey70"))))
 `(log-view-message ((t (:extend t :background "grey85"))))
 `(magit-bisect-bad ((t (:foreground "IndianRed4"))))
 `(magit-bisect-good ((t (:foreground "DarkOliveGreen"))))
 `(magit-bisect-skip ((t (:foreground "DarkGoldenrod"))))
 `(magit-blame-date ((t nil)))
 `(magit-blame-dimmed ((t (:weight normal :slant normal :inherit magit-dimmed))))
 `(magit-blame-hash ((t nil)))
 `(magit-blame-heading ((t (:weight normal :slant normal :extend t :inherit magit-blame-highlight))))
 `(magit-blame-highlight ((t (:extend t :foreground "black" :background "grey80"))))
 `(magit-blame-margin ((t (:weight normal :slant normal :inherit magit-blame-highlight))))
 `(magit-blame-name ((t nil)))
 `(magit-blame-summary ((t nil)))
 `(magit-branch-current ((t (:box 1 :inherit magit-branch-local))))
 `(magit-branch-local ((t (:foreground "SkyBlue4"))))
 `(magit-branch-remote ((t (:foreground "DarkOliveGreen4"))))
 `(magit-branch-remote-head ((t (:box 1 :inherit magit-branch-remote))))
 `(magit-branch-upstream ((t (:slant italic))))
 `(magit-branch-warning ((t (:inherit warning))))
 `(magit-cherry-equivalent ((t (:foreground "magenta"))))
 `(magit-cherry-unmatched ((t (:foreground "cyan"))))
 `(magit-diff-added ((t (:extend t :foreground "#22aa22" :background "#ddffdd"))))
 `(magit-diff-added-highlight ((t (:extend t :foreground "#22aa22" :background "#cceecc"))))
 `(magit-diff-base ((t (:extend t :foreground "#aaaa11" :background "#ffffcc"))))
 `(magit-diff-base-highlight ((t (:extend t :foreground "#aaaa11" :background "#eeeebb"))))
 `(magit-diff-conflict-heading ((t (:inherit magit-diff-hunk-heading))))
 `(magit-diff-conflict-heading-highlight ((t (:inherit magit-diff-hunk-heading-highlight))))
 `(magit-diff-context ((t (:extend t :foreground "grey50"))))
 `(magit-diff-context-highlight ((t (:extend t :foreground "grey50" :background "grey95"))))
 `(magit-diff-file-heading ((t (:extend t))))
 `(magit-diff-file-heading-highlight ((t (:extend t :inherit magit-section-highlight))))
 `(magit-diff-file-heading-selection ((t (:extend t :foreground "salmon4" :inherit magit-diff-file-heading-highlight))))
 `(magit-diff-hunk-heading ((t (:extend t :foreground "grey20" :background "grey90"))))
 `(magit-diff-hunk-heading-highlight ((t (:extend t :foreground "grey20" :background "grey80"))))
 `(magit-diff-hunk-heading-selection ((t (:extend t :foreground "salmon4" :inherit magit-diff-hunk-heading-highlight))))
 `(magit-diff-hunk-region ((t (:extend t :inherit bold))))
 `(magit-diff-lines-boundary ((t (:extend t :inherit magit-diff-lines-heading))))
 `(magit-diff-lines-heading ((t (:extend t :background "LightSalmon3" :inherit magit-diff-hunk-heading-highlight))))
 `(magit-diff-our ((t (:inherit magit-diff-removed))))
 `(magit-diff-our-highlight ((t (:inherit magit-diff-removed-highlight))))
 `(magit-diff-removed ((t (:extend t :foreground "#aa2222" :background "#ffdddd"))))
 `(magit-diff-removed-highlight ((t (:extend t :foreground "#aa2222" :background "#eecccc"))))
 `(magit-diff-revision-summary ((t (:inherit magit-diff-hunk-heading))))
 `(magit-diff-revision-summary-highlight ((t (:inherit magit-diff-hunk-heading-highlight))))
 `(magit-diff-their ((t (:inherit magit-diff-added))))
 `(magit-diff-their-highlight ((t (:inherit magit-diff-added-highlight))))
 `(magit-diff-whitespace-warning ((t (:inherit trailing-whitespace))))
 `(magit-diffstat-added ((t (:foreground "#22aa22"))))
 `(magit-diffstat-removed ((t (:foreground "#aa2222"))))
 `(magit-dimmed ((t (:foreground "grey50"))))
 `(magit-filename ((t (:weight normal))))
 `(magit-hash ((t (:foreground "grey60"))))
 `(magit-head ((t (:inherit magit-branch-local))))
 `(magit-header-line ((t (:inherit magit-section-heading))))
 `(magit-header-line-key ((t (:inherit font-lock-builtin-face))))
 `(magit-header-line-log-select ((t (:inherit bold))))
 `(magit-keyword ((t (:inherit font-lock-string-face))))
 `(magit-keyword-squash ((t (:inherit font-lock-warning-face))))
 `(magit-log-author ((t (:weight normal :slant normal :foreground "firebrick"))))
 `(magit-log-date ((t (:weight normal :slant normal :foreground "grey30"))))
 `(magit-log-graph ((t (:foreground "grey30"))))
 `(magit-mode-line-process ((t (:inherit mode-line-emphasis))))
 `(magit-mode-line-process-error ((t (:inherit error))))
 `(magit-process-ng ((t (:foreground "red" :inherit magit-section-heading))))
 `(magit-process-ok ((t (:foreground "green" :inherit magit-section-heading))))
 `(magit-reflog-amend ((t (:foreground "magenta"))))
 `(magit-reflog-checkout ((t (:foreground "blue"))))
 `(magit-reflog-cherry-pick ((t (:foreground "green"))))
 `(magit-reflog-commit ((t (:foreground "green"))))
 `(magit-reflog-merge ((t (:foreground "green"))))
 `(magit-reflog-other ((t (:foreground "cyan"))))
 `(magit-reflog-rebase ((t (:foreground "magenta"))))
 `(magit-reflog-remote ((t (:foreground "cyan"))))
 `(magit-reflog-reset ((t (:foreground "red"))))
 `(magit-refname ((t (:foreground "grey30"))))
 `(magit-refname-pullreq ((t (:inherit magit-refname))))
 `(magit-refname-stash ((t (:inherit magit-refname))))
 `(magit-refname-wip ((t (:inherit magit-refname))))
 `(magit-section-child-count ((t nil)))
 `(magit-section-heading ((t (:weight bold :extend t))))
 `(magit-section-heading-selection ((t (:extend t :foreground "salmon4"))))
 `(magit-section-highlight ((t (:extend t :background "grey95"))))
 `(magit-section-secondary-heading ((t (:weight bold :extend t))))
 `(magit-sequence-done ((t (:inherit magit-hash))))
 `(magit-sequence-drop ((t (:foreground "IndianRed"))))
 `(magit-sequence-exec ((t (:inherit magit-hash))))
 `(magit-sequence-head ((t (:foreground "SkyBlue4"))))
 `(magit-sequence-onto ((t (:inherit magit-sequence-done))))
 `(magit-sequence-part ((t (:foreground "Goldenrod4"))))
 `(magit-sequence-pick ((t (:inherit default))))
 `(magit-sequence-stop ((t (:foreground "DarkOliveGreen4"))))
 `(magit-signature-bad ((t (:weight bold :foreground "red"))))
 `(magit-signature-error ((t (:foreground "light blue"))))
 `(magit-signature-expired ((t (:foreground "orange"))))
 `(magit-signature-expired-key ((t (:inherit magit-signature-expired))))
 `(magit-signature-good ((t (:foreground "green"))))
 `(magit-signature-revoked ((t (:foreground "violet red"))))
 `(magit-signature-untrusted ((t (:foreground "medium aquamarine"))))
 `(magit-tag ((t (:foreground "Goldenrod4"))))
 `(match ((t (:background "khaki1"))))
 `(mc/cursor-bar-face ((t (:height 1 :background "black"))))
 `(mc/cursor-face ((t (:inverse-video t))))
 `(mc/region-face ((t (:inherit region))))
 `(menu ((t (:inverse-video t))))
 `(message-cited-text-1 ((t (:foreground "red1"))))
 `(message-cited-text-2 ((t (:foreground "red4"))))
 `(message-cited-text-3 ((t (:foreground "OliveDrab4"))))
 `(message-cited-text-4 ((t (:foreground "SteelBlue4"))))
 `(message-header-cc ((t (:foreground "MidnightBlue"))))
 `(message-header-name ((t (:foreground "cornflower blue"))))
 `(message-header-newsgroups ((t (:weight bold :slant italic :foreground "blue4"))))
 `(message-header-other ((t (:foreground "steel blue"))))
 `(message-header-subject ((t (:weight bold :foreground "navy blue"))))
 `(message-header-to ((t (:weight bold :foreground "MidnightBlue"))))
 `(message-header-xheader ((t (:foreground "blue"))))
 `(message-mml ((t (:foreground "ForestGreen"))))
 `(message-separator ((t (:foreground "brown"))))
 `(message-signature-separator ((t (:weight bold))))
 `(minibuffer-prompt ((t (:foreground "medium blue"))))
 `(mm-command-output ((t (:foreground "red3"))))
 `(mm-uu-extract ((t (:extend t :foreground "dark green" :background "light yellow"))))
 `(mode-line ((t (:box (:line-width -1 :style released-button) :foreground "black" :background "grey75"))))
 `(mode-line-active ((t (:inherit mode-line))))
 `(mode-line-buffer-id ((t (:weight bold))))
 `(mode-line-emphasis ((t (:weight bold))))
 `(mode-line-highlight ((t nil)))
 `(mode-line-inactive ((t (:weight light :foreground "grey20" :background "grey90"))))
 `(mouse ((t nil)))
 `(mouse-drag-and-drop-region ((t (:inherit region))))
 `(next-error ((t (:inherit region))))
 `(next-error-message ((t (:extend t :inherit highlight))))
 `(nobreak-hyphen ((t (:foreground "brown"))))
 `(nobreak-space ((t (:underline t :inherit escape-glyph))))
 `(ns-working-text-face ((t (:underline t))))
 `(org-agenda-calendar-daterange ((t (:inherit default))))
 `(org-agenda-calendar-event ((t (:inherit default))))
 `(org-agenda-calendar-sexp ((t (:inherit default))))
 `(org-agenda-clocking ((t (:inherit secondary-selection))))
 `(org-agenda-column-dateline ((t (:inherit org-column))))
 `(org-agenda-current-time ((t (:inherit org-time-grid))))
 `(org-agenda-date ((t (:inherit org-agenda-structure))))
 `(org-agenda-date-today ((t (:weight bold :slant italic :inherit org-agenda-date))))
 `(org-agenda-date-weekend ((t (:weight bold :inherit org-agenda-date))))
 `(org-agenda-date-weekend-today ((t (:inherit org-agenda-date-today))))
 `(org-agenda-diary ((t (:inherit default))))
 `(org-agenda-dimmed-todo-face ((t (:foreground "grey50"))))
 `(org-agenda-done ((t (:foreground "ForestGreen"))))
 `(org-agenda-filter-category ((t (:inherit mode-line))))
 `(org-agenda-filter-effort ((t (:inherit mode-line))))
 `(org-agenda-filter-regexp ((t (:inherit mode-line))))
 `(org-agenda-filter-tags ((t (:inherit mode-line))))
 `(org-agenda-restriction-lock ((t (:background "#eeeeee"))))
 `(org-agenda-structure ((t nil)))
 `(org-agenda-structure-filter ((t (:inherit (org-warning org-agenda-structure)))))
 `(org-agenda-structure-secondary ((t (:inherit org-agenda-structure))))
 `(org-archived ((t (:inherit shadow))))
 `(org-block ((t (:extend t))))
 `(org-block-begin-line ((t (:extend t :inherit org-meta-line))))
 `(org-block-end-line ((t (:extend t :inherit org-block-begin-line))))
 `(org-checkbox ((t (:inherit bold))))
 `(org-checkbox-statistics-done ((t (:inherit org-done))))
 `(org-checkbox-statistics-todo ((t (:inherit org-todo))))
 `(org-cite ((t (:inherit link))))
 `(org-cite-key ((t (:inherit link))))
 `(org-clock-overlay ((t (:foreground "black" :background "LightGrey"))))
 `(org-code ((t (:inherit shadow))))
 `(org-column ((t (:background "grey90"))))
 `(org-column-title ((t (:weight bold :underline t :background "grey90"))))
 `(org-date ((t (:underline t :foreground "Purple"))))
 `(org-date-selected ((t (:inverse-video t :foreground "Red1"))))
 `(org-default ((t (:inherit default))))
 `(org-dispatcher-highlight ((t (:weight bold :foreground "DarkBlue" :background "SlateGrey1"))))
 `(org-document-info ((t (:foreground "midnight blue"))))
 `(org-document-info-keyword ((t (:inherit shadow))))
 `(org-document-title ((t (:weight bold :foreground "midnight blue"))))
 `(org-done ((t (:weight bold :foreground "ForestGreen"))))
 `(org-drawer ((t (:foreground "grey50"))))
 `(org-ellipsis ((t (:underline t :foreground "DarkGoldenrod"))))
 `(org-footnote ((t (:underline t :foreground "Purple"))))
 `(org-formula ((t (:foreground "Firebrick"))))
 `(org-habit-alert-face ((t (:background "#f5f946"))))
 `(org-habit-alert-future-face ((t (:background "#fafca9"))))
 `(org-habit-clear-face ((t (:background "#8270f9"))))
 `(org-habit-clear-future-face ((t (:background "#d6e4fc"))))
 `(org-habit-overdue-face ((t (:background "#f9372d"))))
 `(org-habit-overdue-future-face ((t (:background "#fc9590"))))
 `(org-habit-ready-face ((t (:background "#4df946"))))
 `(org-habit-ready-future-face ((t (:background "#acfca9"))))
 `(org-headline-done ((t nil)))
 `(org-headline-todo ((t (:foreground "Red4"))))
 `(org-hide ((t (:foreground "white"))))
 `(org-imminent-deadline ((t (:inherit org-warning))))
 `(org-inline-src-block ((t (:inherit org-block))))
 `(org-latex-and-related ((t (:foreground "SaddleBrown"))))
 `(org-level-1 ((t (:extend nil :inherit outline-1))))
 `(org-level-2 ((t (:extend nil :inherit outline-2))))
 `(org-level-3 ((t (:extend nil :inherit outline-3))))
 `(org-level-4 ((t (:extend nil :inherit outline-4))))
 `(org-level-5 ((t (:extend nil :inherit outline-5))))
 `(org-level-6 ((t (:extend nil :inherit outline-6))))
 `(org-level-7 ((t (:extend nil :inherit outline-7))))
 `(org-level-8 ((t (:extend nil :inherit outline-8))))
 `(org-link ((t (:inherit link))))
 `(org-list-dt ((t (:weight bold))))
 `(org-macro ((t (:inherit org-latex-and-related))))
 `(org-meta-line ((t (:inherit font-lock-comment-face))))
 `(org-mode-line-clock ((t (:inherit mode-line))))
 `(org-mode-line-clock-overrun ((t (:background "red" :inherit mode-line))))
 `(org-priority ((t (:inherit font-lock-keyword-face))))
 `(org-property-value ((t (:inherit default))))
 `(org-quote ((t (:inherit org-block))))
 `(org-scheduled ((t (:foreground "DarkGreen"))))
 `(org-scheduled-previously ((t (:foreground "Firebrick"))))
 `(org-scheduled-today ((t (:foreground "DarkGreen"))))
 `(org-sexp-date ((t (:foreground "Purple"))))
 `(org-special-keyword ((t (:foreground "grey50"))))
 `(org-table ((t (:foreground "Blue1"))))
 `(org-table-header ((t (:foreground "Black" :background "LightGrey" :inherit org-table))))
 `(org-table-row ((t (:inherit org-table))))
 `(org-tag ((t (:weight bold))))
 `(org-tag-group ((t (:inherit org-tag))))
 `(org-target ((t (:underline t))))
 `(org-time-grid ((t (:foreground "DarkGoldenrod"))))
 `(org-todo ((t (:weight bold :foreground "Red1"))))
 `(org-upcoming-deadline ((t (:foreground "Firebrick"))))
 `(org-upcoming-distant-deadline ((t (:inherit org-default))))
 `(org-verbatim ((t (:inherit shadow))))
 `(org-verse ((t (:inherit org-block))))
 `(org-warning ((t (:inherit font-lock-warning-face))))
 `(outline-1 ((t (:weight bold))))
 `(outline-2 ((t (:inherit outline-1))))
 `(outline-3 ((t (:inherit outline-1))))
 `(outline-4 ((t (:inherit outline-1))))
 `(outline-5 ((t (:inherit outline-1))))
 `(outline-6 ((t (:inherit outline-1))))
 `(outline-7 ((t (:inherit outline-1))))
 `(outline-8 ((t (:inherit outline-1))))
 `(package-description ((t (:inherit default))))
 `(package-help-section-name ((t (:inherit (bold font-lock-function-name-face)))))
 `(package-name ((t (:inherit link))))
 `(package-status-avail-obso ((t (:inherit package-status-incompat))))
 `(package-status-available ((t (:inherit default))))
 `(package-status-built-in ((t (:inherit font-lock-builtin-face))))
 `(package-status-dependency ((t (:inherit package-status-installed))))
 `(package-status-disabled ((t (:inherit font-lock-warning-face))))
 `(package-status-external ((t (:inherit package-status-built-in))))
 `(package-status-from-source ((t (:inherit font-lock-negation-char-face))))
 `(package-status-held ((t (:inherit font-lock-constant-face))))
 `(package-status-incompat ((t (:inherit error))))
 `(package-status-installed ((t (:inherit font-lock-comment-face))))
 `(package-status-new ((t (:inherit (bold package-status-available)))))
 `(package-status-unsigned ((t (:inherit font-lock-warning-face))))
 `(query-replace ((t (:inherit isearch))))
 `(read-multiple-choice-face ((t (:weight bold :inherit (help-key-binding underline)))))
 `(rectangle-preview ((t (:inherit region))))
 `(region ((t (:extend t :background "lightgoldenrod2"))))
 `(scroll-bar ((t nil)))
 `(secondary-selection ((t (:extend t :background "yellow1"))))
 `(separator-line ((t (:height 0.1 :background "#a0a0a0"))))
 `(sgml-namespace ((t (:inherit font-lock-builtin-face))))
 `(sh-escaped-newline ((t (:inherit font-lock-string-face))))
 `(sh-heredoc ((t nil)))
 `(sh-quoted-exec ((t nil)))
 `(shadow ((t (:foreground "grey50"))))
 `(shell-highlight-undef-alias-face ((t (:inherit font-lock-variable-name-face))))
 `(shell-highlight-undef-defined-face ((t (:inherit font-lock-function-name-face))))
 `(shell-highlight-undef-undefined-face ((t (:inherit font-lock-warning-face))))
 `(show-paren-match ((t (:background "turquoise"))))
 `(show-paren-match-expression ((t (:inherit show-paren-match))))
 `(show-paren-mismatch ((t (:foreground "white" :background "purple"))))
 `(shr-abbreviation ((t (:underline (:style wave) :inherit underline))))
 `(shr-code ((t (:inherit fixed-pitch))))
 `(shr-h1 ((t (:height 1.3 :weight bold))))
 `(shr-h2 ((t (:weight bold))))
 `(shr-h3 ((t (:slant italic))))
 `(shr-h4 ((t (:inherit default))))
 `(shr-h5 ((t (:inherit default))))
 `(shr-h6 ((t (:inherit default))))
 `(shr-link ((t (:inherit link))))
 `(shr-mark ((t (:foreground "black" :background "yellow"))))
 `(shr-selected-link ((t (:background "red" :inherit shr-link))))
 `(shr-sliced-image ((t (:underline nil :overline nil))))
 `(shr-strike-through ((t (:strike-through t))))
 `(shr-sup ((t (:height 0.8))))
 `(shr-text ((t (:inherit variable-pitch-text))))
 `(smerge-base ((t (:extend t :background "#ffffaa"))))
 `(smerge-lower ((t (:extend t :background "#ddffdd"))))
 `(smerge-markers ((t (:extend t :background "grey85"))))
 `(smerge-refined-added ((t (:background "#aaffaa" :inherit smerge-refined-change))))
 `(smerge-refined-changed ((t nil)))
 `(smerge-refined-removed ((t (:background "#ffbbbb" :inherit smerge-refined-change))))
 `(smerge-upper ((t (:extend t :background "#ffdddd"))))
 `(success ((t (:weight bold :foreground "green"))))
 `(tab-bar ((t (:foreground "black" :background "grey85" :inherit variable-pitch))))
 `(tab-bar-tab ((t (:box (:line-width 1 :style released-button) :inherit tab-bar))))
 `(tab-bar-tab-group-current ((t (:weight bold :box nil :inherit tab-bar-tab))))
 `(tab-bar-tab-group-inactive ((t (:inherit (shadow tab-bar-tab-inactive)))))
 `(tab-bar-tab-inactive ((t (:background "grey75" :inherit tab-bar-tab))))
 `(tab-bar-tab-ungrouped ((t (:inherit (shadow tab-bar-tab-inactive)))))
 `(tab-line ((t (:height 0.9 :foreground "black" :background "grey85" :inherit variable-pitch))))
 `(tabulated-list-fake-header ((t (:weight bold :underline t :overline t))))
 `(term ((t (:inherit default))))
 `(term-bold ((t (:inherit ansi-color-bold))))
 `(term-color-black ((t (:inherit ansi-color-black))))
 `(term-color-blue ((t (:inherit ansi-color-blue))))
 `(term-color-bright-black ((t (:inherit ansi-color-bright-black))))
 `(term-color-bright-blue ((t (:inherit ansi-color-bright-blue))))
 `(term-color-bright-cyan ((t (:inherit ansi-color-bright-cyan))))
 `(term-color-bright-green ((t (:inherit ansi-color-bright-green))))
 `(term-color-bright-magenta ((t (:inherit ansi-color-bright-magenta))))
 `(term-color-bright-red ((t (:inherit ansi-color-bright-red))))
 `(term-color-bright-white ((t (:inherit ansi-color-bright-white))))
 `(term-color-bright-yellow ((t (:inherit ansi-color-bright-yellow))))
 `(term-color-cyan ((t (:inherit ansi-color-cyan))))
 `(term-color-green ((t (:inherit ansi-color-green))))
 `(term-color-magenta ((t (:inherit ansi-color-magenta))))
 `(term-color-red ((t (:inherit ansi-color-red))))
 `(term-color-white ((t (:inherit ansi-color-white))))
 `(term-color-yellow ((t (:inherit ansi-color-yellow))))
 `(term-faint ((t (:inherit ansi-color-faint))))
 `(term-fast-blink ((t (:inherit ansi-color-fast-blink))))
 `(term-italic ((t (:inherit ansi-color-italic))))
 `(term-slow-blink ((t (:inherit ansi-color-slow-blink))))
 `(term-underline ((t (:inherit ansi-color-underline))))
 `(tool-bar ((t (:box (:line-width 1 :style released-button) :foreground "black" :background "grey75"))))
 `(tooltip ((t (:foreground "black" :background "lightyellow" :inherit variable-pitch))))
 `(trailing-whitespace ((t (:underline t))))
 `(transient-active-infix ((t (:inherit highlight))))
 `(transient-argument ((t (:weight bold :inherit font-lock-string-face))))
 `(transient-delimiter ((t (:inherit shadow))))
 `(transient-disabled-suffix ((t (:weight bold :foreground "black" :background "red"))))
 `(transient-enabled-suffix ((t (:weight bold :foreground "black" :background "green"))))
 `(transient-heading ((t (:inherit font-lock-keyword-face))))
 `(transient-higher-level ((t (:box (:line-width (-1 . -1) :color "grey60")))))
 `(transient-inactive-argument ((t (:inherit shadow))))
 `(transient-inactive-value ((t (:inherit shadow))))
 `(transient-inapt-argument ((t (:weight bold :inherit shadow))))
 `(transient-inapt-suffix ((t (:slant italic :inherit shadow))))
 `(transient-key ((t (:inherit font-lock-builtin-face))))
 `(transient-key-exit ((t (:foreground "#aa2222" :inherit transient-key))))
 `(transient-key-noop ((t (:foreground "grey80" :inherit transient-key))))
 `(transient-key-recurse ((t (:foreground "#2266ff" :inherit transient-key))))
 `(transient-key-return ((t (:foreground "#aaaa11" :inherit transient-key))))
 `(transient-key-stack ((t (:foreground "#dd4488" :inherit transient-key))))
 `(transient-key-stay ((t (:foreground "#22aa22" :inherit transient-key))))
 `(transient-mismatched-key ((t (:box (:line-width (-1 . -1) :color "magenta")))))
 `(transient-nonstandard-key ((t (:box (:line-width (-1 . -1) :color "cyan")))))
 `(transient-unreachable ((t (:inherit shadow))))
 `(transient-unreachable-key ((t (:weight normal :inherit (shadow transient-key)))))
 `(transient-value ((t (:weight bold :inherit font-lock-string-face))))
 `(treesit-explorer-anonymous-node ((t (:inherit shadow))))
 `(treesit-explorer-field-name ((t nil)))
 `(tty-menu-disabled-face ((t (:foreground "lightgrey" :background "blue"))))
 `(tty-menu-enabled-face ((t (:weight bold :foreground "yellow" :background "blue"))))
 `(tty-menu-selected-face ((t (:background "red"))))
 `(underline ((t (:underline t))))
 `(variable-pitch-text ((t (:height 1.1 :inherit variable-pitch))))
 `(vc-conflict-state ((t (:inherit vc-state-base))))
 `(vc-edited-state ((t (:inherit vc-state-base))))
 `(vc-git-log-edit-summary-max-warning ((t (:inherit error))))
 `(vc-git-log-edit-summary-target-warning ((t (:inherit warning))))
 `(vc-ignored-state ((t (:inherit vc-state-base))))
 `(vc-locally-added-state ((t (:inherit vc-state-base))))
 `(vc-locked-state ((t (:inherit vc-state-base))))
 `(vc-missing-state ((t (:inherit vc-state-base))))
 `(vc-needs-update-state ((t (:inherit vc-state-base))))
 `(vc-removed-state ((t (:inherit vc-state-base))))
 `(vc-state-base ((t nil)))
 `(vc-up-to-date-state ((t (:inherit vc-state-base))))
 `(vertical-border ((t (:foreground "grey80"))))
 `(vterm-color-black ((t (:inherit term-color-black))))
 `(vterm-color-blue ((t (:inherit term-color-blue))))
 `(vterm-color-bright-black ((t (:inherit term-color-bright-black))))
 `(vterm-color-bright-blue ((t (:inherit term-color-bright-blue))))
 `(vterm-color-bright-cyan ((t (:inherit term-color-bright-cyan))))
 `(vterm-color-bright-green ((t (:inherit term-color-bright-green))))
 `(vterm-color-bright-magenta ((t (:inherit term-color-bright-magenta))))
 `(vterm-color-bright-red ((t (:inherit term-color-bright-red))))
 `(vterm-color-bright-white ((t (:inherit term-color-bright-white))))
 `(vterm-color-bright-yellow ((t (:inherit term-color-bright-yellow))))
 `(vterm-color-cyan ((t (:inherit term-color-cyan))))
 `(vterm-color-green ((t (:inherit term-color-green))))
 `(vterm-color-inverse-video ((t (:inherit default))))
 `(vterm-color-magenta ((t (:inherit term-color-magenta))))
 `(vterm-color-red ((t (:inherit term-color-red))))
 `(vterm-color-underline ((t (:inherit default))))
 `(vterm-color-white ((t (:inherit term-color-white))))
 `(vterm-color-yellow ((t (:inherit term-color-yellow))))
 `(warning ((t (:weight bold :foreground "orange"))))
 `(which-func ((t (:inherit font-lock-function-name-face))))
 `(widget-button ((t (:weight bold))))
 `(widget-button-pressed ((t (:foreground "red1"))))
 `(widget-documentation ((t (:foreground "dark green"))))
 `(widget-field ((t (:extend t :box (:line-width (1 . -1) :color "grey80") :background "grey85"))))
 `(widget-inactive ((t (:inherit shadow))))
 `(widget-single-line-field ((t (:background "grey85"))))
 `(widget-unselected ((t (:inherit widget-inactive))))
 `(window-divider ((t (:foreground "grey60"))))
 `(window-divider-first-pixel ((t (:foreground "grey80"))))
 `(window-divider-last-pixel ((t (:foreground "grey40"))))
 `(xref-file-header ((t (:inherit compilation-info))))
 `(xref-line-number ((t (:inherit compilation-line-number))))
 `(xref-match ((t (:inherit match)))))

;;;###autoload
(when (and (boundp 'custom-theme-load-path) load-file-name)
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'tok)

;;; tok-theme.el ends here
