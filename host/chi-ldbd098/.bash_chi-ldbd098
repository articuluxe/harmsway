# -*- Mode: sh -*-
# .bash_chi-ldbd098

export VISUAL="$EMACS_BIN"/emacs
export EDITOR="$VISUAL -nw"
alias emacs="\$EDITOR"

# NOT sourcing the site file

alias xrdev="singularity shell -B /net,/opt/xr,/opt/xr_job_agent,/opt/1tick,/fry,/data,/shared -s /bin/bash ~/containers/$CONTAINER"

. /shared/spack/opt/profile/spack.sh

run_in_container()
{
    "$HOME"/snap/start_container.sh "$HOME"/bin/run-in-container.sh "$@"
}

build_in_container()
{
    run_in_container "python -m xrmake2" "$@"
}

upgrade_simutils()
{
    pushd "$HOME"/lon/london_utils &> /dev/null
    pip install --user ./
    if [ $? -ne 0 ]; then
        echo "Error updating london_utils; stopping..."
        popd &> /dev/null
    else
        echo "Updated london_utils"
        pushd "$HOME"/lon/simulation_utils &> /dev/null
        pip install --user ./
        if [ $? -ne 0 ]; then
            echo "Error updating simulation_utils; stopping..."
        else
            echo "Updated simulation_utils"
        fi
        popd &> /dev/null
        popd &> /dev/null
    fi
}

use_gcc()
{
   export CC=$CSTDLIB_BIN/gcc
   export CXX=$CSTDLIB_BIN/g++
   export CXX_FLAGS="-Wall -Wextra -pedantic -Wno-unused-local-typedefs"
}

use_gcc

# # >>> conda initialize >>>
# # !! Contents within this block are managed by 'conda init' !!
# __conda_setup="$('/fry/home/dan.harms/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
# if [ $? -eq 0 ]; then
#     eval "$__conda_setup"
# else
#     if [ -f "/fry/home/dan.harms/anaconda3/etc/profile.d/conda.sh" ]; then
#         . "/fry/home/dan.harms/anaconda3/etc/profile.d/conda.sh"
#     else
#         export PATH="/fry/home/dan.harms/anaconda3/bin:$PATH"
#     fi
# fi
# unset __conda_setup
# # <<< conda initialize <<<
