# -*- Mode: sh; comment-start: "#" -*-
# unix.txt --- misc. helpful commands
# Copyright (C) 2015-2017   (dan.harms)
# Author:  <dan.harms@xrtrading.com>
# Created: Friday, March 20, 2015
# Version: 1.0
# Modified Time-stamp: <2017-02-07 15:59:19 dan.harms>
# Modified by: Dan Harms
# Keywords: help

# find git
wget http://kernel.org/pub/software/scm/git/git-2.1.4.tar.gz

# install x
yum groupinstall basic-desktop desktop-platform x11 fonts
# change default runlevel in /etc/inittab:
id:5:initdefault:

# find with multiple -exec (short-circuit)
find . -name "pattern" -exec echo {} \; -exec grep <str> {} \;
# find with multiple -exec (non-short-circuit)
find . -name "pattern" \( -exec echo {} \; -o -exec true \; \) -exec grep <str> {} \;

# ensure core dump on SEGV
ulimit -c unlimited
# limit interface mtu (current session)
ifconfig eth0 mtu 1000
# limit interface mtu (persistent)
# edit /etc/sysconfig/network-scripts/ifcfg-eth0
MTU=1000
# show process using a file
fuser
# find out which distro you're running
facter lsbdistrelease
cat /etc/*-release

# compare 2 directories
diff -qr one two
comm -3 <(ls -l one) <(ls -l two)

################################ command line ################################
# last command
!!
# run last command <cmd>
!<cmd>
# last command beginning with <prefix>
!<prefix>
# last command containing <substring>
!?<substring>?
# entire command line typed so far
!#
# last command's [last] argument
!$
# last command's 1st argument
!^
# all of last command's arguments
!*
# <cmd>'s nth argument
!<cmd>:n
# last ls command's third through fifth arguments
!ls:3-5
# edit prior command (1st occurrence)
^replace^replacement
# edit prior command (all occurrences) (use & in new to refer to old
!!:gs/old/new
# multiple files
touch file{1,2,3}
# rename
mv file.{old,new}
# operate on all files except python/shell
rm !(*.py|*.sh)
# result of last command
$?
# edit current line using $EDITOR, then execute
\C-x \C-e
# execute current line, then present subsequent from history
\C-o

# redirect stderr
<command> 2> output.txt
# redirect stderr to stdout
<command> 1>&2
<command> 2>&1
# redirect stdout+stderr
<command> &> output.txt

# debug a bash script
set -xv

#################################### awk #####################################
# seach a field for a specific regex
awk '$5 ~ /regex/ {print $5;}' file
# look at TAB-separated values
awk 'BEGIN {FS="\t"}; {if ($12 == "ESH6") print $40; }' <file>
# average a column
awk '/^num/ {n++; sum+=$2} END {print n?sum/n:0}' file
# echo lines with fewer lines
awk -F, 'NF < 18 { print $0;}' <file>
# find which column matches a regex
head -1 file.csv | awk -F, '{for (i=1; i <= NF; ++i) { if ($i ~ /regex/) {print i,$i;}}}'

# code ends here
